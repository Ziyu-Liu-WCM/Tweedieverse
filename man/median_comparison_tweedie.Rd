% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{median_comparison_tweedie}
\alias{median_comparison_tweedie}
\title{Median Comparison for Compositionality Adjustment}
\usage{
median_comparison_tweedie(
  df,
  p_cutoff = 0.95,
  subtract_median = FALSE,
  n_sims = 10000,
  median_threshold = 0
)
}
\arguments{
\item{df}{A `data.frame` returned by **Tweedieverse** or any other differential analysis methods containing (at
minimum) the columns  
`taxon`, `metadata`, `effect_size`, `pval`, `stderr`, and `qval`.}

\item{p_cutoff}{Numeric.  Upper bound on the original p-value to include an
effect in the median calculation (default `0.95` = all non-missing).}

\item{subtract_median}{Logical.  If `TRUE`, subtracts the group
median from every coefficient before returning it in `coef_median`;
otherwise the original `effect_size` is copied unchanged
(default `FALSE`).}

\item{n_sims}{Integer.  Number of Monte-Carlo simulations used to estimate
the covariance between each coefficient and the group median
(default `10 000`).}

\item{median_threshold}{Numeric.  Absolute difference below which a
coefficient is considered effectively equal to the median and assigned
`pval_median = 1` (default `0`).}
}
\value{
The input `df` with two new columns:
\describe{
  \item{`coef_median`}{Median-centred coefficient (or the original
  `effect_size` if `subtract_median = FALSE`).}
  \item{`pval_median`}{Two-sided p-value from the median-comparison test.}
}
}
\description{
Adjust Tweedieverse(or any other differential analysis methods) coefficient estimates and p-values by testing each taxon
against the *median* effect for the same metadata variable — a simple
post-hoc strategy to curb false discoveries driven by the compositional
nature of microbiome count data (after the approach adopted in **MaAsLin 3**).
}
\details{
For every distinct value in `metadata` the algorithm
\enumerate{
  \item keeps coefficients with `pval < p_cutoff` and computes their median;
  \item simulates `n_sims` draws of coefficients using a normal
        approximation (`N(effect_size, stderr²)`) and records the empirical
        distribution of the simulated medians;
  \item derives a variance-inflated *offset* that accounts for the
        covariance between each coefficient and the group median;
  \item performs a two-sided Z-test of `H₀ : βᵢ = offsetᵢ`, returning the
        resulting p-value in `pval_median`.
}
}
\section{Warning}{

The procedure is heuristic and relies on normal approximations.  Results
may be unstable for very small sample sizes or when `stderr` values are
zero or missing.
}

\examples{
\dontrun{

######################
# HMP2 input_features Analysis #
######################

#############
# Load input_features #
#############

library(data.table)
input_features <- fread("https://raw.githubusercontent.com/biobakery/Maaslin2/master/inst/extdata/HMP2_taxonomy.tsv", sep ="\t")
input_metadata <-fread("https://raw.githubusercontent.com/biobakery/Maaslin2/master/inst/extdata/HMP2_metadata.tsv", sep ="\t")

###############
# Format data #
###############

library(tibble)
features<- column_to_rownames(input_features, 'ID')
metadata<- column_to_rownames(input_metadata, 'ID')

#############
# Fit Model #
#############

library(Tweedieverse)
HMP2 <- Tweedieverse(
features,
metadata,
output = './demo_output/HMP2', # Assuming demo_output exists
fixed_effects = c('diagnosis', 'dysbiosisnonIBD','dysbiosisUC','dysbiosisCD', 'antibiotics', 'age'),
random_effects = c('site', 'subject'),
base_model = 'CPLM',
adjust_offset = FALSE, # No offset as the values are relative abundances
cores = 8, # Make sure your computer has the capability
median_comparison = TRUE,
median_subtraction = TRUE,
standardize = FALSE,
reference = c('diagnosis,nonIBD'))

HMP2_adj <- median_comparison_tweedie(HMP2,
                                        p_cutoff = 0.95,
                                        subtract_median = TRUE,
                                        n_sims = 10000,
                                        median_threshold = 0)

head(HMP2_adj[, c("taxon", "metadata", "coef_median", "pval_median")])

}

}
\seealso{
[MaAsLin 3 GitHub](https://github.com/biobakery/maaslin3)
}
